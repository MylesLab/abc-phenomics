stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$time_ripen_2017, abc_phenos$percent_firmness_avg_17, method = "pearson")$estimate^2, digits = 3), " p-value = ", signif(cor.test(abc_phenos$time_ripen_2017, abc_phenos$percent_firmness_avg_17, method = "pearson")$p.value, digits = 2)))
list_of_figures <- list(a1, a2, a3, a4, a5, a6)
cowplot::plot_grid(
plotlist = list_of_figures,
nrow = 2,
align = 'hv',
labels = "auto",
hjust = -1
)
dev.off()
#load pheno data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
acid_percent <- abc_phenos %>% select(apple_id, percent_acidity_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_acid_percent <-  acid_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
brix_percent <- abc_phenos %>% select(apple_id, percent_brix_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_brix_percent <-  brix_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
firmness_percent <- abc_phenos %>% select(apple_id, percent_firmness_avg_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_firmness_percent <-  firmness_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
weight_percent <- abc_phenos %>% select(apple_id, percent_weight_avg_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_weight_percent <-  weight_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
#######################################################
pdf("figure_3_storage.pdf", width = 8, height = 10)
a1 <- ggplot(abc_phenos, aes(acidity_17_harv, acidity_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="Acidity at harvest (g/L)", y="Acidity after storage (g/L)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(0,27), ylim= c(0,27))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$acidity_17_harv, abc_phenos$acidity_17_stor, method = "pearson")$estimate^2, digits = 2), " p-value =", signif(cor.test(abc_phenos$acidity_17_harv, abc_phenos$acidity_17_stor, method = "pearson")$p.value, digits = 2)))
a2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_acidity_17))+
geom_rect(data = top_ten_acid_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in acidity during storage (%) N=568")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
##################################
b1 <- ggplot(abc_phenos, aes(brix_17_harv, brix_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="SS at harvest (Brix)", y="SS after storage (Brix)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(5,22), ylim= c(5,22))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$brix_17_harv, abc_phenos$brix_17_stor, method = "pearson")$estimate^2, digits = 2), " p-value =", signif(cor.test(abc_phenos$brix_17_harv, abc_phenos$brix_17_stor, method = "pearson")$p.value, digits = 2)))
b2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_brix_17))+
geom_rect(data = top_ten_brix_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in SS during storage (%) N=601")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
#############################################
f1 <- ggplot(abc_phenos, aes(firmness_avg_17_harv, firmness_avg_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="Firmness at harvest (kg/cm2)", y="Firmness after storage (kg/cm2)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(1.5,14.5), ylim= c(1.5,14.5))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor, method = "pearson")$estimate^2, digits = 2), " p-value = ", signif(cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor, method = "pearson")$p.value, digits = 2)))
f2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_firmness_avg_17))+
geom_rect(data = top_ten_firmness_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in firmness during storage (%) N=538")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
#############################################
w1 <- ggplot(abc_phenos, aes(weight_avg_17_harv, weight_avg_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="Weight at harvest (g)", y="Weight after storage (g)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(7,460), ylim= c(7,460))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$weight_avg_17_harv, abc_phenos$weight_avg_17_stor, method = "pearson")$estimate^2, digits = 2), " p-value = ", signif(cor.test(abc_phenos$weight_avg_17_harv, abc_phenos$weight_avg_17_stor, method = "pearson")$p.value, digits = 2)))
w2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_weight_avg_17))+
geom_rect(data = top_ten_weight_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in weight during storage (%) N=536")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
list_of_figures <- list(a1, a2, b1, b2, f1, f2, w1, w2)
cowplot::plot_grid(
plotlist = list_of_figures,
nrow = 4,
align = 'hv',
labels = "auto",
hjust = -1
)
dev.off()
#load pheno data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
acid_percent <- abc_phenos %>% select(apple_id, percent_acidity_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_acid_percent <-  acid_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
brix_percent <- abc_phenos %>% select(apple_id, percent_brix_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_brix_percent <-  brix_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
firmness_percent <- abc_phenos %>% select(apple_id, percent_firmness_avg_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_firmness_percent <-  firmness_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
weight_percent <- abc_phenos %>% select(apple_id, percent_weight_avg_17) %>% gather(key="pheno", value="value", -apple_id)
top_ten_weight_percent <-  weight_percent %>% filter(apple_id %in% c(48, 205, 160, 167, 1223, 222, 57, 235, 171))
#######################################################
pdf("figure_3_storage.pdf", width = 8, height = 10)
a1 <- ggplot(abc_phenos, aes(acidity_17_harv, acidity_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="Acidity at harvest (g/L)", y="Acidity after storage (g/L)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(0,27), ylim= c(0,27))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$acidity_17_harv, abc_phenos$acidity_17_stor, method = "pearson")$estimate^2, digits = 3), " p-value =", signif(cor.test(abc_phenos$acidity_17_harv, abc_phenos$acidity_17_stor, method = "pearson")$p.value, digits = 2)))
a2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_acidity_17))+
geom_rect(data = top_ten_acid_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in acidity during storage (%) N=568")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
##################################
b1 <- ggplot(abc_phenos, aes(brix_17_harv, brix_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="SS at harvest (Brix)", y="SS after storage (Brix)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(5,22), ylim= c(5,22))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$brix_17_harv, abc_phenos$brix_17_stor, method = "pearson")$estimate^2, digits = 3), " p-value =", signif(cor.test(abc_phenos$brix_17_harv, abc_phenos$brix_17_stor, method = "pearson")$p.value, digits = 2)))
b2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_brix_17))+
geom_rect(data = top_ten_brix_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in SS during storage (%) N=601")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
#############################################
f1 <- ggplot(abc_phenos, aes(firmness_avg_17_harv, firmness_avg_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="Firmness at harvest (kg/cm2)", y="Firmness after storage (kg/cm2)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(1.5,14.5), ylim= c(1.5,14.5))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor, method = "pearson")$estimate^2, digits = 3), " p-value = ", signif(cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor, method = "pearson")$p.value, digits = 2)))
f2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_firmness_avg_17))+
geom_rect(data = top_ten_firmness_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in firmness during storage (%) N=538")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
#############################################
w1 <- ggplot(abc_phenos, aes(weight_avg_17_harv, weight_avg_17_stor))+
geom_point(size=1, alpha=0.7, colour = "darkgrey")+
theme_bw()+
labs(x="Weight at harvest (g)", y="Weight after storage (g)")+
theme(panel.border = element_blank(), axis.text=element_text(colour = "black", size=10), axis.title=element_text(size = 10, face = "bold"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size = 0.2), plot.title = element_text(size = 9))+
coord_fixed(xlim = c(7,460), ylim= c(7,460))+
stat_smooth(method="lm", col="black", se = FALSE)+
ggtitle(paste("r2 = ", signif(cor.test(abc_phenos$weight_avg_17_harv, abc_phenos$weight_avg_17_stor, method = "pearson")$estimate^2, digits = 3), " p-value = ", signif(cor.test(abc_phenos$weight_avg_17_harv, abc_phenos$weight_avg_17_stor, method = "pearson")$p.value, digits = 2)))
w2 = ggplot(data=abc_phenos, aes(abc_phenos$percent_weight_avg_17))+
geom_rect(data = top_ten_weight_percent, aes(ymin = 0, ymax = Inf, xmin = min(value, na.rm = T), xmax = max(value, na.rm = T)), fill = "lightgrey", inherit.aes = FALSE)+
geom_histogram(bins = 50)+
scale_x_continuous(name = "Change in weight during storage (%) N=536")+
scale_y_continuous(name = "Count", expand = c(0,0))+
theme(axis.text=element_text(colour = "black", size=9), axis.title=element_text(size = 10, face = "bold"))
list_of_figures <- list(a1, a2, b1, b2, f1, f2, w1, w2)
cowplot::plot_grid(
plotlist = list_of_figures,
nrow = 4,
align = 'hv',
labels = "auto",
hjust = -1
)
dev.off()
#load pheno data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
min(na.omit(abc_phenos$weight_avg_17_harv))
max(na.omit(abc_phenos$weight_avg_17_harv))
459/7.5
min(na.omit(abc_phenos$acidity_17_harv))
max(na.omit(abc_phenos$acidity_17_harv))
26.35/1.41
max(na.omit(abc_phenos$tpc))
min(na.omit(abc_phenos$tpc))
27.94/.29
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
#remove rows of apples that do not phenolic or year of release data.
abc_phenos <- abc_phenos[!is.na(abc_phenos$release_year),  ]
abc_phenos <- abc_phenos[!is.na(abc_phenos$tpc),  ]
View(abc_phenos)
pre_1940 <- abc_phenos[,abc_phenos$release_year > 1940]
pre_1940 <- abc_phenos[,(abc_phenos$release_year > 1940)]
pre_1940 <- abc_phenos[(abc_phenos$release_year > 1940),]
View(pre_1940)
pre_1940 <- abc_phenos[(abc_phenos$release_year >= 1940),]
pre_1940 <- abc_phenos[(abc_phenos$release_year < 1940),]
post_1940 <- abc_phenos[(abc_phenos$release_year >= 1940),]
53+118
mean(pre_1940$tpc)
mean(post_1940$tpc)
3.478814/4.747709
1- 0.7327353
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
final_tab = select(abc_phenos, apple_id, release_year, tpc)
View(final_tab)
final_tab = final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
class(final_tab$tpc)
class(final_tab$release_year)
class(final_tab)
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
class(early_index)
class(late_index)
i=1
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
final_tab <- select(abc_phenos, apple_id, release_year, tpc)
final_tab <- final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_index <- as.numeric(as.character(early_index))
late_index <- as.numeric(as.character(late_index))
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
final_tab <- select(abc_phenos, apple_id, release_year, tpc)
final_tab <- final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
final_tab <- as.data.frame(final_tab)
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
cbind(date_vec, percent_change)
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
final_tab <- select(abc_phenos, apple_id, release_year, tpc)
final_tab <- final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
final_tab <- as.data.frame(final_tab)
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = mean(final_tab[early_index,"tpc"])
late_val = mean(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
cbind(date_vec, percent_change)
final_tab <- select(abc_phenos, apple_id, release_year, tpc)
final_tab <- final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
final_tab <- as.data.frame(final_tab)
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
final_tab <- select(abc_phenos, apple_id, release_year, tpc)
final_tab <- final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
final_tab <- as.data.frame(final_tab)
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
cbind(date_vec, percent_change)
View(abc_phenos)
table(unique(abc_phenos$apple_id))
unique(abc_phenos$apple_id)
1000+119
table(table(unique(abc_phenos$apple_id)))
colnames(abc_phenos)
48-9
table(abc_phenos$use)
?lme4
#need to take cleaned up harvest date 2017 and flowering time 2016 (prior to reml) and subtract them from eachother. Then need to run remland add them to the big pheno table.
library("lme4")
?`lme4-package`
citation("lme4")
table(table(abc_phenos$country))
table(abc_phenos$country)
12*4
11*4
44+3
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
#load in test table with new names of the phenos that are shared between the two years and this table has been made with new pheno names so that we can more easily run a loop.
name_table <- read_delim("../data/2016_2017_pheno_table.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
abc_matrix = as.matrix(abc_phenos)
pdf("supp_figure_3.pdf", width = 10, height = 12)
par(mfrow = c(5, 4))
for (i in 1:nrow(name_table)) {
names_vec = as.character(name_table[i,])
pheno1 = as.numeric(abc_matrix[,names_vec[1]])
pheno2 = as.numeric(abc_matrix[,names_vec[2]])
index_both_phenos = which(!is.na(pheno1) & !is.na(pheno2))
maxlim = max(c(pheno1[index_both_phenos],pheno2[index_both_phenos]),na.rm = T)
maxlim = maxlim * 1.1
minlim = min(c(pheno1[index_both_phenos],pheno2[index_both_phenos]),na.rm = T)
minlim = minlim * 0.9
cortest = cor.test(pheno1, pheno2, method = "pearson")
rho = as.numeric(round(cortest$est, 3))
pval = as.numeric(signif(cortest$p.val, 3))*17
ggplot
plot(pheno1, pheno2, pch=16, col="darkgrey", xlab = "2016", ylab = "2017", sub = paste("r2 = ", rho, " p =", pval, " N =", length(index_both_phenos)), main = paste(names_vec[3], names_vec[4]), xlim = c(minlim, maxlim), ylim = c(minlim, maxlim), abline(lm(pheno2 ~ pheno1)))
}
dev.off()
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
#load in test table with new names of the phenos that are shared between the two years and this table has been made with new pheno names so that we can more easily run a loop.
name_table <- read_delim("../data/2016_2017_pheno_table.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
abc_matrix = as.matrix(abc_phenos)
pdf("supp_figure_3.pdf", width = 10, height = 12)
par(mfrow = c(5, 4))
for (i in 1:nrow(name_table)) {
names_vec = as.character(name_table[i,])
pheno1 = as.numeric(abc_matrix[,names_vec[1]])
pheno2 = as.numeric(abc_matrix[,names_vec[2]])
index_both_phenos = which(!is.na(pheno1) & !is.na(pheno2))
maxlim = max(c(pheno1[index_both_phenos],pheno2[index_both_phenos]),na.rm = T)
maxlim = maxlim * 1.1
minlim = min(c(pheno1[index_both_phenos],pheno2[index_both_phenos]),na.rm = T)
minlim = minlim * 0.9
cortest = cor.test(pheno1, pheno2, method = "pearson")
r2 = as.numeric(round(cortest$estimate^2, 3))
pval = as.numeric(signif(cortest$p.val, 3))*17
ggplot
plot(pheno1, pheno2, pch=16, col="darkgrey", xlab = "2016", ylab = "2017", sub = paste("r2 = ", rho, " p =", pval, " N =", length(index_both_phenos)), main = paste(names_vec[3], names_vec[4]), xlim = c(minlim, maxlim), ylim = c(minlim, maxlim), abline(lm(pheno2 ~ pheno1)))
}
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
#load in test table with new names of the phenos that are shared between the two years and this table has been made with new pheno names so that we can more easily run a loop.
name_table <- read_delim("../data/2016_2017_pheno_table.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
abc_matrix = as.matrix(abc_phenos)
pdf("supp_figure_3.pdf", width = 10, height = 12)
par(mfrow = c(5, 4))
for (i in 1:nrow(name_table)) {
names_vec = as.character(name_table[i,])
pheno1 = as.numeric(abc_matrix[,names_vec[1]])
pheno2 = as.numeric(abc_matrix[,names_vec[2]])
index_both_phenos = which(!is.na(pheno1) & !is.na(pheno2))
maxlim = max(c(pheno1[index_both_phenos],pheno2[index_both_phenos]),na.rm = T)
maxlim = maxlim * 1.1
minlim = min(c(pheno1[index_both_phenos],pheno2[index_both_phenos]),na.rm = T)
minlim = minlim * 0.9
cortest = cor.test(pheno1, pheno2, method = "pearson")
r2 = as.numeric(round(cortest$estimate^2, 3))
pval = as.numeric(signif(cortest$p.val, 3))*17
plot(pheno1, pheno2, pch=16, col="darkgrey", xlab = "2016", ylab = "2017", sub = paste("r2 = ", r2, " p =", pval, " N =", length(index_both_phenos)), main = paste(names_vec[3], names_vec[4]), xlim = c(minlim, maxlim), ylim = c(minlim, maxlim), abline(lm(pheno2 ~ pheno1)))
}
dev.off()
cor.tets
cor.test(abc_phenos$percent_weight_16, abc_phenos$percent_weight_avg_17)$estimate^2
min(na.omit(abc_phenos$flowering_jul_16_harv))
max(na.omit(abc_phenos$flowering_jul_16_harv))
164.1301-143.0722
View(abc_phenos)
cor.test
cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor)
cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor)$estimate^2
cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor)$p.value
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
final_tab <- select(abc_phenos, apple_id, release_year, tpc)
final_tab <- final_tab[which(!is.na(final_tab[,"tpc"]) & !is.na(final_tab[,"release_year"])),c("tpc", "release_year")]
final_tab <- as.data.frame(final_tab)
date_vec = seq(1870, 2000, by = 10)
percent_change = c()
for (i in 1:length(date_vec)) {
early_index = which(final_tab[,"release_year"] <= date_vec[i])
late_index = which(final_tab[,"release_year"] > date_vec[i])
early_val = median(final_tab[early_index,"tpc"])
late_val = median(final_tab[late_index,"tpc"])
percent_change[i] = ((early_val - late_val)/early_val)*100
}
cbind(date_vec, percent_change)
early <- final_tab[early_index,"tpc"]
median(early)
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
pre <- abc_phenos[(abc_phenos$release_year < 1940), "tpc"]
View(pre)
pre <- abc_phenos[na.omit(abc_phenos$release_year < 1940), "tpc"]
post <- abc_phenos[(abc_phenos$release_year >= 1940), "tpc"]
View(post)
View(pre)
post <- na.omit(post$tpc)
pre <- na.omit(pre$tpc)
118+53
View(abc_phenos)
median(post)
median(pre)
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
lm(formula = firmness_avg_17_harv ~ time_ripen_2017, data = abc_pheno)
lm(formula = firmness_avg_17_harv ~ time_ripen_2017, data = abc_phenos)
0.06174+1.74739
0.06174*7
0.43218+1.74739
1.80913/2.17957
lm(formula = firmness_avg_17_stor ~ time_ripen_2017, data = abc_phenos)
0.05622*10
0.5622-0.82781
0.05622*20
1.1244-0.82781
0.05622*27
1.51794-0.82781
0.29659/0.69013
View(abc_phenos)
table(abc_phenos$country)
table(is.na(abc_phenos$country))
164-47
4.86-3.38
1.48/3.38
1.48/4.86
pre <- abc_phenos[na.omit(abc_phenos$release_year < 1940), "tpc"]
pre <- abc_phenos[(abc_phenos$release_year < 1940), "tpc"]
View(pre)
post <- abc_phenos[(abc_phenos$release_year >= 1940), "tpc"]
na.omit(pre)
pre <- abc_phenos[(abc_phenos$release_year < 1940), "tpc"]
pre <- na.omit(pre)
post <- abc_phenos[(abc_phenos$release_year >= 1940), "tpc"]
post <- na.omit(post)
median(pre)
View(post)
median(pre$tpc)
median(post$tpc)
4.864845-3.381572
1.483273/4.864845
27.9-0.293
0.293/27.9
27.9/0.293
95.22184*0.293
47.046*2.5
2.17957-1.80913
2.17957-1.74739
0.43218/1.74739
0.05622*7
0.39354-0.82781
-0.43427+0.82781
-0.43427-(-0.82781)
0.39354/0.82781
lm(abc_phenos$percent_firmness_avg_17 ~ abc_phenos$time_ripen_2017)
lm(abc_phenos$percent_firmness_avg_17 ~ abc_phenos$time_ripen_2017)
summary(lm(abc_phenos$percent_firmness_avg_17 ~ abc_phenos$time_ripen_2017))
plot(abc_phenos$percent_firmness_avg_17,  abc_phenos$time_ripen_2017)
plot(abc_phenos$time_ripen_2017,  abc_phenos$percent_firmness_avg_17)
(0.2689*7)-67.8294
-67.8294-65.9471
-67.8294+65.9471
-1.8823/-67.8294
cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor)
cor.test(abc_phenos$firmness_avg_17_harv, abc_phenos$firmness_avg_17_stor)$estimate^2
lm(formula = abc_phenos$firmness_avg_17_harv ~ abc_phenos$time_ripen_2017)
#load packages
library("readr")
library("dplyr")
library("RColorBrewer")
library("gplots")
library("viridis")
library("scales")
library("tidyverse")
library("cowplot")
library("gridExtra")
library("grid")
theme_set(theme_classic())
#load data
abc_phenos <- read_csv("../outputs/20201003_pheno_meta_data.csv")
View(abc_phenos)
table(abc_phenos$date_jul_17_harv)
table(table(abc_phenos$date_jul_17_harv))
!is.na(abc_phenos$date_jul_17_harv)
table(!is.na(abc_phenos$date_jul_17_harv))
table(!is.na(abc_phenos$firmness_avg_17_harv))
table(!is.na(abc_phenos$firmness_avg_17_stor))
